name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  release:
    types: [created]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Show toolchain versions
        shell: pwsh
        run: |
          rustc -vV
          cargo -vV
      - name: Build release binary
        shell: pwsh
        run: |
          cargo build --verbose --release *>&1 | Tee-Object -FilePath build.log
          if ($LASTEXITCODE -ne 0) { exit $LASTEXITCODE }
      - name: Upload build log (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-log
          path: build.log
      - name: Package binary
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force dist
          Copy-Item target/release/auto_screen_switch.exe dist/
          Compress-Archive -Path dist/auto_screen_switch.exe -DestinationPath release.zip
      - name: Upload Release
        uses: actions/upload-artifact@v4
        with:
          name: AutoScreenSwitch
          path: release.zip
          retention-days: 30
      - name: Get existing Release upload URL
        id: get_release
        uses: actions/github-script@v6
        with:
          script: |
            const tag = context.ref.startsWith('refs/tags/') ? context.ref.substring('refs/tags/'.length) : context.ref;
            core.info(`Using tag: ${tag}`);
            const release = await github.rest.repos.getReleaseByTag({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag: tag
            });
            const uploadUrl = release.data.upload_url; // 不要去掉 {?name,label}
            core.info(`Found release with upload_url: ${uploadUrl}`);
            return uploadUrl;
      - name: Debug GITHUB_TOKEN
        shell: pwsh
        run: |
          if ($env:GITHUB_TOKEN) {
            Write-Host 'GITHUB_TOKEN is defined.'
          } else {
            Write-Host 'GITHUB_TOKEN is NOT defined.'
          }
      - name: Create Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            release.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}